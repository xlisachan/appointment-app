{"version":3,"sources":["components/AptList.js","components/AddAppointment.js","components/SearchAppointments.js","components/App.js","serviceWorker.js","index.js"],"names":["AptList","handleDelete","_this","props","onDelete","whichItem","react_default","a","createElement","className","onClick","this","singleItem","petName","aptDate","ownerName","aptNotes","Component","AddApointment","toggleAptDisplay","handleToggle","handleAdd","e","tempItem","refs","inputPetName","value","inputOwnerName","inputAptDate","inputAptTime","inputAptNotes","addApt","preventDefault","displayAptBody","display","bodyVisible","style","onSubmit","for","type","id","ref","placeholder","rows","cols","React","SearchAppointments","handleSort","onReorder","target","orderDir","handleOrder","orderBy","handleSearch","onSearch","onChange","aria-label","data-toggle","aria-haspopup","aria-expanded","role","_","require","MainInterface","state","aptBodyVisible","queryText","myAppointments","deleteMessage","item","allApts","newApts","without","setState","toggleAddDisplay","tempVisibility","addItem","tempApts","push","searchApts","q","reOrder","data","_this2","filteredApts","forEach","toLowerCase","indexOf","map","index","components_AptList","key","AddAppointment","components_SearchAppointments","Boolean","window","location","hostname","match","ReactDOM","render","components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.48c67f3a.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass AptList extends Component {\n    handleDelete = () => {\n        this.props.onDelete(this.props.whichItem)\n    }\n    \n    render() {\n      return (\n        <li className=\"pet-item media\">\n        <div className=\"media-left\">\n            <button className=\"pet-delete btn btn-xs btn-danger\"\n                    onClick={this.handleDelete}>\n                <span className=\"glyphicon glyphicon-remove\"></span>\n            </button>\n        </div>\n        <div className=\"pet-info media-body\">\n          <div className=\"pet-head\">\n            <span className=\"pet-name\">{this.props.singleItem.petName}</span>\n            <span className=\"apt-date pull-right\">{this.props.singleItem.aptDate}</span>\n          </div>\n          <div className=\"owner-name\"><span className=\"label-item\">Owner: </span>\n            {this.props.singleItem.ownerName}\n          </div>\n          <div className=\"apt-notes\">\n            {this.props.singleItem.aptNotes}\n          </div>\n        </div>\n      </li>\n      )\n    }\n  }\n\n  export default AptList;","import React from 'react';\n\nclass AddApointment extends React.Component {\n    toggleAptDisplay = () => {\n        this.props.handleToggle();\n    }\n\n    handleAdd = (e) => {\n        var tempItem = {\n            petName: this.refs.inputPetName.value,\n            ownerName: this.refs.inputOwnerName.value,\n            aptDate: this.refs.inputAptDate.value + ' ' + this.refs.inputAptTime.value,\n            aptNotes: this.refs.inputAptNotes.value\n        }\n        this.props.addApt(tempItem);\n        e.preventDefault();\n    }\n\n    render() {\n        var displayAptBody = {\n            display: this.props.bodyVisible ? 'block' : 'none'\n        }\n\n        return (\n            <div className=\"panel panel-primary\">\n                <div className=\"panel-heading apt-addheading\" onClick={ this.toggleAptDisplay }>\n                    <span className=\"glyphicon glyphicon-plus\"></span> Add Appointment\n                </div>\n                <div className=\"panel-body\" style={displayAptBody}>\n                    <form className=\"add-appointment form-horizontal\" onSubmit= { this.handleAdd }>\n                        <div className=\"form-group\">\n                            <label className=\"col-sm-2 control-label\" for=\"petName\">Pet Name</label>\n                            <div className=\"col-sm-10\">\n                                <input type=\"text\" className=\"form-control\"\n                                    id=\"petName\" ref=\"inputPetName\" placeholder=\"Pet's Name\" />\n                            </div>\n                        </div>\n                        <div className=\"form-group\">\n                            <label className=\"col-sm-2 control-label\" for=\"petOwner\">Pet Owner</label>\n                            <div className=\"col-sm-10\">\n                            <input type=\"text\" className=\"form-control\"\n                                id=\"petOwner\" ref=\"inputOwnerName\" placeholder=\"Owner's Name\" />\n                            </div>\n                        </div>\n                        <div className=\"form-group\">\n                            <label className=\"col-sm-2 control-label\" for=\"aptDate\">Date</label>\n                            <div className=\"col-sm-4\">\n                            <input type=\"date\" className=\"form-control\"\n                                id=\"aptDate\" ref=\"inputAptDate\" />\n                        </div>\n                        <label className=\"col-sm-2 control-label\" for=\"aptTime\">Time</label>\n                        <div className=\"col-sm-4\">\n                            <input type=\"time\" className=\"form-control\"\n                                id=\"aptTime\" ref=\"inputAptTime\" />\n                        </div>\n                        </div>\n                        <div className=\"form-group\">\n                            <label className=\"col-sm-2 control-label\" for=\"aptNotes\">Apt. Notes</label>\n                            <div className=\"col-sm-10\">\n                                <textarea className=\"form-control\" rows=\"4\" cols=\"50\"\n                                    id=\"aptNotes\" ref=\"inputAptNotes\" placeholder=\"Appointment Notes\"></textarea>\n                            </div>\n                        </div>\n                        <div className=\"form-group\">\n                            <div className=\"col-sm-offset-2 col-sm-10\">\n                                <button type=\"submit\" className=\"btn btn-primary pull-right\">Add Appointment</button>\n                            </div>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default AddApointment;","import React, { Component } from 'react';\n\nclass SearchAppointments extends Component {\n    handleSort = e => {\n        this.props.onReorder(e.target.id, this.props.orderDir);\n    }\n\n    handleOrder = e => {\n        this.props.onReorder(this.props.orderBy, e.target.id);\n    }\n\n    handleSearch = e => {\n        this.props.onSearch(e.target.value);\n    }\n    render() {\n        return (\n            <div className=\"row search-appointments\">\n                <div className=\"col-sm-offset-3 col-sm-6\">\n                    <div className=\"input-group\">\n                        <input id=\"SearchApts\" onChange={ this.handleSearch } placeholder=\"Search\" type=\"text\" className=\"form-control\" aria-label=\"Search Appointments\" />\n                        <div className=\"input-group-btn\">\n                            <button type=\"button\" className=\"btn btn-primary dropdown-toggle\"\n                            data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">Sort by: <span className=\"caret\"></span></button>\n                            <ul className=\"dropdown-menu dropdown-menu-right\">\n                                <li id=\"petName\" onClick={ this.handleSort }>Pet Name {(this.props.orderBy === 'petName') ? <span className=\"glyphicon glyphicon-ok\"></span> : null }</li>\n                                <li id=\"aptDate\" onClick={ this.handleSort }>Date {(this.props.orderBy === 'aptDate') ? <span className=\"glyphicon glyphicon-ok\"></span> : null }</li>\n                                <li id=\"ownerName\" onClick={ this.handleSort }>Owner {(this.props.orderBy === 'ownerName') ? <span className=\"glyphicon glyphicon-ok\"></span> : null }</li>\n                                <li role=\"separator\" className=\"divider\"></li>\n                                <li id=\"asc\" onClick={ this.handleOrder }>Asc {(this.props.orderDir === 'asc') ? <span className=\"glyphicon glyphicon-ok\"></span> : null }</li>\n                                <li id=\"desc\" onClick={ this.handleOrder }>Desc {(this.props.orderDir === 'desc') ? <span className=\"glyphicon glyphicon-ok\"></span> : null }</li>\n                            </ul>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default SearchAppointments;","import React, { Component } from 'react';\nimport '../stylesheets/App.css';\nimport AptList from './AptList';\nimport AddAppointment from './AddAppointment';\nimport SearchAppointments from './SearchAppointments';\n \nvar _ = require('lodash');\n\nclass MainInterface extends Component {\n  state = {\n      aptBodyVisible: false,\n      orderBy: 'petName',\n      orderDir: 'asc',\n      queryText: '',\n      myAppointments: []\n  }\n\n  componentDidMount() {\n    var data = require('../../src/data.json');\n    this.setState({ \n      myAppointments: data\n    })\n  }\n\n  deleteMessage = (item) => {\n    var allApts = this.state.myAppointments;\n    var newApts = _.without(allApts, item);\n    this.setState({\n      myAppointments: newApts\n    })\n  }\n\n  toggleAddDisplay = () => {\n    var tempVisibility = !this.state.aptBodyVisible;\n    this.setState({\n      aptBodyVisible: tempVisibility\n    })\n  }\n\n  addItem = (tempItem) => {\n    var tempApts = this.state.myAppointments;\n    tempApts.push(tempItem);\n    this.setState({\n      myAppointments: tempApts\n    })\n  }\n\n  searchApts = q => {\n    this.setState({\n      queryText: q\n    })\n  }\n\n  reOrder = (orderBy, orderDir) => {\n    this.setState({\n      orderBy: orderBy,\n      orderDir: orderDir\n    })\n  }\n\n  render() {\n    var filteredApts = [];\n    var orderBy = this.state.orderBy;\n    var orderDir = this.state.orderDir;\n    var queryText = this.state.queryText;\n    var myAppointments = this.state.myAppointments;\n\n    myAppointments.forEach(item => {\n      if (\n        (item.petName.toLowerCase().indexOf(queryText) !== -1) ||\n        (item.ownerName.toLowerCase().indexOf(queryText) !== -1) ||\n        (item.aptDate.toLowerCase().indexOf(queryText) !== -1) ||\n        (item.aptNotes.toLowerCase().indexOf(queryText) !== -1)\n      ) {\n        filteredApts.push(item)\n      }\n    })\n\n    filteredApts = _.orderBy(filteredApts, item => {\n      return item[orderBy].toLowerCase();\n    }, orderDir)\n\n    filteredApts = filteredApts.map((item,index) => {\n      return (\n         <AptList key = { index }\n                  singleItem = { item }\n                  whichItem = { item }\n                  onDelete = { this.deleteMessage } />\n      )\n    })\n\n    return (\n      <div className=\"interface\">\n        <AddAppointment bodyVisible={ this.state.aptBodyVisible }\n                        handleToggle = { this.toggleAddDisplay }\n                        addApt = { this.addItem }/>\n        <SearchAppointments orderBy = { this.state.orderBy }\n                            orderDir = { this.state.orderDir }\n                            onReorder = { this.reOrder }\n                            onSearch = { this.searchApts } />\n        <ul className=\"item-list media-list\">{ filteredApts }</ul>\n      </div>\n      \n    );\n  }\n}\n\nexport default MainInterface;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport '../src/stylesheets/index.css';\nimport App from '../src/components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('petAppointments'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}